<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oseasy.initiate.modules.sys.dao.UserDao">

	<sql id="userColumns">
		a.id,
		a.company_id AS "company.id",
		a.office_id AS "office.id",
		a.login_name,
		a.password,
		a.no,
		a.sex,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.photo,
		a.professional,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by
		AS "updateBy.id",
		a.update_date,
		a.del_flag,
		a.id_type,
		a.birthday,
		a.id_no idNumber,
		a.national,
		a.political,
		a.country,
		a.education,
		a.degree,
		c.name AS "company.name",
		c.parent_id AS "company.parent.id",
		c.parent_ids AS "company.parentIds",
		ca.id AS "company.area.id",
		ca.name AS "company.area.name",
		ca.parent_id AS
		"company.area.parent.id",
		ca.parent_ids AS "company.area.parentIds",
		o.name AS "office.name",
		o.parent_id AS "office.parent.id",
		o.parent_ids AS "office.parentIds",
		oa.id AS "office.area.id",
		oa.name
		AS "office.area.name",
		oa.parent_id AS "office.area.parent.id",
		oa.parent_ids AS "office.area.parentIds",
		cu.id AS
		"company.primaryPerson.id",
		cu.name AS "company.primaryPerson.name",
		cu2.id AS "company.deputyPerson.id",
		cu2.name AS
		"company.deputyPerson.name",
		ou.id AS "office.primaryPerson.id",
		ou.name AS "office.primaryPerson.name",
		ou2.id AS
		"office.deputyPerson.id",
		ou2.name AS "office.deputyPerson.name"<!-- , r.id 
			AS "roleList.id", r.office_id AS "roleList.office.id", r.name AS "roleList.name", 
			r.enname AS "roleList.enname", r.role_type AS "roleList.roleType", r.data_scope 
			AS "roleList.dataScope" -->
		,a.domain
	</sql>

	<sql id="userJoins">
		LEFT JOIN sys_office c ON c.id = a.company_id
		LEFT JOIN sys_area ca ON
		ca.id = c.area_id
		LEFT JOIN sys_office o ON o.id = a.office_id
		LEFT JOIN
		sys_area oa ON oa.id = o.area_id
		LEFT JOIN sys_user cu ON cu.id =
		c.primary_person
		LEFT JOIN sys_user cu2 ON cu2.id = c.deputy_person
		LEFT JOIN sys_user ou ON ou.id = o.primary_person
		LEFT JOIN sys_user
		ou2 ON ou2.id = o.deputy_person
		LEFT JOIN sys_office op ON op.id =
		a.professional
		<!-- LEFT JOIN sys_user_role ur ON ur.user_id = a.id LEFT JOIN sys_role 
			r ON r.id = ur.role_id -->
	</sql>

	<!-- 根据编号获得用户 -->
	<select id="get" resultType="User">
		SELECT
		<include refid="userColumns" /><!-- , ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins" /><!-- LEFT JOIN sys_role_office ro 
			ON ro.role_id = r.id -->
		WHERE a.id = #{id}
	</select>

	<!-- 根据登录名查询用户 -->
	<select id="getByLoginName" resultType="User" parameterType="User">
		SELECT
		<include refid="userColumns" /><!-- , ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins" /><!-- LEFT JOIN sys_role_office ro 
			ON ro.role_id = r.id -->
		WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

	<!-- 根据登录名或者学号查询用户 -->
	<select id="getByLoginNameOrNo" resultType="User" parameterType="java.lang.String">
		SELECT
		<include refid="userColumns" />
		FROM sys_user a
		<include refid="userJoins" />
		where a.del_flag = '0' and (a.login_name = #{loginNameOrNo} or a.no = #{loginNameOrNo} ) limit 1
	</select>



	<select id="getByNo" resultType="User" parameterType="User">
		SELECT
		<include refid="userColumns" />
		FROM sys_user a
		<include refid="userJoins" />
		WHERE a.no = #{no} AND a.del_flag = #{DEL_FLAG_NORMAL} limit 1
	</select>
	<!-- 根据手机号查询用户 -->
	<select id="getByMobile" resultType="User" parameterType="User">
		SELECT
		<include refid="userColumns" /><!-- , ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins" /><!-- LEFT JOIN sys_role_office ro 
			ON ro.role_id = r.id -->
		WHERE a.mobile = #{mobile} AND a.del_flag = #{DEL_FLAG_NORMAL} limit 1
	</select>
	<select id="getByMobileWithId" resultType="User" parameterType="User">
		SELECT
		<include refid="userColumns" /><!-- , ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins" /><!-- LEFT JOIN sys_role_office ro 
			ON ro.role_id = r.id -->
		WHERE a.mobile = #{mobile} AND a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="id != null and id != ''">
			and a.id!=#{id}
		</if>
		limit 1
	</select>
	<select id="findListByRoleName" parameterType="java.lang.String"
		resultType="User">
		SELECT a.id,
		a.company_id AS "company.id",
		a.office_id AS
		"office.id",
		a.login_name,
		a.password,
		a.no,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.photo,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS
		"updateBy.id",
		a.update_date,
		a.del_flag
		FROM sys_user a
		LEFT JOIN
		sys_user_role ur ON ur.user_id = a.id
		LEFT JOIN sys_role r ON r.id =
		ur.role_id
		WHERE r.enname = #{ename}
	</select>

	<select id="getCollegeSecs" parameterType="java.lang.String"
		resultType="User">
		SELECT a.id,
		a.login_name AS loginName,
		a.name AS name
		FROM
		sys_user a
		LEFT JOIN sys_user u2 ON a.office_id=u2.office_id
		WHERE
		a.user_type='3' AND u2.id=#{id} and a.del_flag='0'
	</select>

	<select id="getCollegeExperts" parameterType="java.lang.String"
		resultType="User">
		SELECT a.id,
		a.login_name AS loginName,
		a.name AS name
		FROM
		sys_user a
		LEFT JOIN sys_user u2 ON a.office_id=u2.office_id
		WHERE
		a.user_type='4' AND u2.id=#{id} and a.del_flag='0'
	</select>

	<select id="getSchoolSecs" resultType="User">
		SELECT a.id,
		a.login_name
		AS loginName,
		a.name AS name
		FROM sys_user a
		WHERE a.user_type='6' and
		a.del_flag='0'
	</select>

	<select id="getSchoolExperts" resultType="User">
		SELECT a.id,
		a.login_name AS loginName,
		a.name AS name
		FROM sys_user a
		WHERE
		a.user_type='5' and a.del_flag='0'
	</select>
	<select id="findUserByLoginName" resultType="User"
		parameterType="java.lang.String">
		SELECT id,
		company_id AS "company.id",
		office_id AS
		"office.id"
		FROM sys_user
		WHERE login_name = #{loginName} and del_flag =
		'0'
	</select>






	<select id="findByType" parameterType="User" resultType="User">
		SELECT a.id,
		a.company_id AS "company.id",
		a.office_id AS "office.id",
		a.login_name,
		a.password,
		a.no,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.photo,
		a.user_type AS "userType",
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} and a.user_type = #{userType}
		<if test="id!=null and id!=''">
			and a.id != #{id}
		</if>
	</select>


	<!-- 分页查询用户信息 -->
	<select id="findList" resultType="User">
		SELECT
		<include refid="userColumns" />
		FROM sys_user a
		<include refid="userJoins" />
		<if test="role != null and role.id != null and role.id != ''">
			JOIN sys_user_role ur ON ur.user_id = a.id AND ur.role_id
			= #{role.id}
		</if>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="company != null and company.id != null and company.id != ''">
			AND (c.id = #{company.id} OR c.parent_ids LIKE
			<if test="dbName == 'oracle'">'%,'||#{company.id}||',%')</if>
			<if test="dbName == 'mssql'">'%,'+#{company.id}+',%')</if>
			<if test="dbName == 'mysql'">CONCAT('%,', #{company.id}, ',%'))</if>
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND (op.id = #{office.id} or o.id = #{office.id} OR o.parent_ids LIKE
			<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if>
			<if test="dbName == 'mssql'">'%,'+#{office.id}+',%')</if>
			<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if>
		</if>
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<if test="userType != null and userType != ''">
			AND a.user_type = #{userType}

		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like
			<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{loginName}+'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like
			<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>

		<if test="roleId != null and roleId != ''">
			AND a.id in (select ur.user_id from sys_user_role ur left
			join sys_user u on ur.user_id = u.id where ur.role_id = #{roleId})
		</if>
		<!-- <if test="user!=null"> AND a.id not in (SELECT t.`user_id` FROM team_user_relation 
			t LEFT JOIN team a ON t.`team_id`=a.`id` WHERE t.`user_id`='1' AND t.`state`='0') 
			</if> -->
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				<!-- ORDER BY c.code, o.code, a.name -->
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>



	<!-- 分页查询用户信息 -->
	<select id="findListTree" resultType="User">
		SELECT
		<!-- <include refid="userColumns"/> -->
		a.id,
		a.login_name,
		a.name as name,
		a.phone,
		a.mobile,
		a.user_type as
		userType,
		a.login_name as loginName,
		a.domain as domain,
		a.professional
		as professional,
		t.teacherType as teacherType
		FROM
		sys_user a
		left JOIN
		sys_office o ON o.id = a.office_id
		left join sys_teacher_expansion t on
		t.user_id = a.id
		left join sys_student_expansion s on s.user_id = a.id
		<!-- JOIN sys_student_expansion stu on stu.user_id = a.id JOIN sys_teacher_expansion 
			te on te.user_id = a.id -->
		WHERE a.del_flag = '0' and a.user_type in (1,2) and ((t.is_open is
		null and s.is_open=1) or (t.is_open=1 and s.is_open is null))
		<!--除去已经加入到任意团队中的用户 -->
		AND a.id NOT IN (SELECT tr.`user_id` FROM `team_user_relation` tr
		INNER JOIN `team` t ON t.`id` = tr.`team_id` WHERE tr.state = '0' AND
		tr.`del_flag` = '0' AND t.del_flag = '0' AND t.`state` IN(0,1) AND
		tr.`user_id` IS NOT NULL)
		<!-- <if test="company != null and company.id != null and company.id != 
			''"> AND (c.id = #{company.id} OR c.parent_ids LIKE <if test="dbName == 'oracle'">'%,'||#{company.id}||',%')</if> 
			<if test="dbName == 'mssql'">'%,'+#{company.id}+',%')</if> <if test="dbName 
			== 'mysql'">CONCAT('%,', #{company.id}, ',%'))</if> </if> -->
		<if test="office != null and office.id != null and office.id != ''">
			AND (o.id = #{office.id} OR o.parent_ids LIKE
			<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if>
			<if test="dbName == 'mssql'">'%,'+#{office.id}+',%')</if>
			<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if>
		</if>
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<!-- <if test="!currentUser.admin"> AND a.id != '1' </if> -->
		<if test="userType != null and userType != ''">
			AND a.user_type = #{userType}

		</if>

		<if
			test="userType != null and userType != '' and userType == 2 and teacherType!=null and teacherType!=''">
			AND t.teacherType = #{teacherType}

		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like
			<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{loginName}+'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like
			<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>

		<if test="professional != null and professional != ''">
			AND a.professional = #{professional}

		</if>

		<if test="domain != null and domain != ''">
			AND #{domain} in (select t.domain from sys_user t where t.domain is
			not NULL )
			<!-- <if test="dbName == 'oracle'">'%'||#{domain}||'%'</if> <if test="dbName 
				== 'mssql'">'%'+#{domain}+'%'</if> <if test="dbName == 'mysql'">CONCAT('%', 
				#{domain}, '%')</if> -->
		</if>



		<!-- <if test="roleId != null and roleId != ''"> AND a.id in (select ur.user_id 
			from sys_user_role ur left join sys_user u on ur.user_id = u.id where ur.role_id 
			= #{roleId}) </if> -->

		<!-- 数据范围过滤 -->
		<!-- ${sqlMap.dsf} -->
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				<!-- ORDER BY c.code, o.code, a.name -->
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<!-- 根据OfficeId获取用户（树查询用户时用） -->
	<select id="findUserByOfficeId" resultType="User" useCache="true">
		SELECT
		a.id, a.name,a.user_type userType, a.login_name
		FROM sys_user a
		WHERE a.del_flag =
		#{DEL_FLAG_NORMAL}
		AND (a.office_id = #{office.id} or a.professional =
		#{office.id})
		ORDER BY a.name
	</select>

	<!-- 根据专业获取用户（树查询用户时用） -->
	<select id="findUserByProfessionId" resultType="User" useCache="true">
		SELECT
		a.id, a.name, a.user_type userType,a.login_name
		FROM sys_user a
		WHERE a.del_flag = 0
		AND a.professional in (${professional})
		ORDER BY a.name
	</select>


	<!--根据userId查询导师类型 -->
	<select id="getTeacherTypeByUserId" resultType="java.lang.String">
		SELECT
		te.teacherType as teacherType
		FROM sys_teacher_expansion te
		WHERE
		te.del_flag = 0
		AND te.user_id = #{userId}
	</select>

	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="User">
		SELECT
		<include refid="userColumns" />
		FROM sys_user a
		<include refid="userJoins" />
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY c.code, o.code, a.name
	</select>

	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
		COUNT(1)
		FROM sys_user
		a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO sys_user(
		id,
		company_id,
		office_id,
		login_name,
		password,
		no,
		sex,
		name,
		email,
		phone,
		mobile,
		user_type,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		login_flag,
		photo,
		del_flag,
		id_type,
		national,
		political,
		country,
		professional,
		degree,
		education,
		domain,
		id_no,
		birthday

		) VALUES (
		#{id},
		#{company.id},
		#{office.id},
		#{loginName},
		#{password},
		#{no},
		#{sex},
		#{name},
		#{email},
		#{phone},
		#{mobile},
		#{userType},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{loginFlag},
		#{photo},
		#{delFlag},
		#{idType},
		#{national},
		#{political},
		#{country},
		#{professional},
		#{degree},
		#{education},
		#{domain},
		#{idNumber},
		#{birthday}
		)
	</insert>

	<update id="updateMobile">
		UPDATE sys_user SET mobile = #{mobile} WHERE id =
		#{id}
	</update>

	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user SET
		company_id = #{company.id},
		office_id = #{office.id},
		login_name = #{loginName},
		password =
		#{password},
		no = #{no},
		name = #{name},
		email = #{email},
		phone =
		#{phone},
		mobile = #{mobile},
		user_type = #{userType},
		update_by =
		#{updateBy.id},
		update_date = #{updateDate},
		remarks = #{remarks},
		login_flag = #{loginFlag},
		photo = #{photo},
		professional =
		#{professional},
		degree = #{degree},
		education = #{education},
		id_type =
		#{idType},
		national = #{national},
		political = #{political},
		birthday =
		#{birthday},
		sex = #{sex},
		country = #{country},
		area = #{area},
		id_no =
		#{idNumber},
		domain = #{domain}

		WHERE id = #{id}
	</update>

	<!-- 更新用户 -->
		<update id="updateUserPhoto">
			UPDATE sys_user SET
			photo = #{photo}
			WHERE id = #{id}
		</update>

	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{id}
	</delete>

	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO sys_user_role(user_id, role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id}
			<if test="dbName != 'mssql'">
				FROM dual
			</if>
		</foreach>
	</insert>

	<!-- 更新用户信息 -->
	<update id="updateUserInfo">
		UPDATE sys_user SET
		email = #{email},
		phone = #{phone},
		mobile = #{mobile},
		update_by = #{updateBy.id},
		update_date =
		#{updateDate},
		remarks = #{remarks},
		photo = #{photo}
		WHERE id = #{id}
	</update>

	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET
		password = #{password}
		WHERE id =
		#{id}
	</update>

	<!-- 通过手机号码修改密码 -->
	<update id="updateUserByPhone">
		UPDATE sys_user SET
		password = #{password}
		WHERE mobile
		= #{mobile}
	</update>

	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE sys_user SET
		login_ip = #{loginIp},
		login_Date =
		#{loginDate}
		WHERE id = #{id}
	</update>

	<!-- 逻辑删除用户 -->
	<update id="delete">
		UPDATE sys_user SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<select id="findContestByUserId"
		resultType="com.oseasy.initiate.modules.sys.entity.gContestUndergo"
		parameterType="java.lang.String">
		SELECT
		an.type as "type",
		g.create_date as "createDate",
		g.p_name as "pName",
		gca.award as "award",
		t.sponsor as "sponsor",
		g.id
		games_id
		FROM g_contest g
		LEFT JOIN g_contest_award gca
		ON
		gca.contest_id=g.id
		LEFT JOIN team t
		ON g.team_id = t.id
		LEFT JOIN
		g_contest_announce an
		ON g.announce_id=an.id
		WHERE g.team_id IN (
		SELECT
		tur.team_id FROM team_user_relation tur LEFT JOIN sys_user u ON
		tur.user_id = u.id WHERE u.id =#{userId} AND team_id !='null'
		) AND
		g.audit_state BETWEEN '1' AND '8' ORDER BY g.create_date DESC LIMIT 1
	</select>

	<select id="getUserByName" resultType="User">
		select a.id,a.name from
		sys_user a
		where a.name=#{name}
	</select>
	<select id="getStuByCdn" resultType="User">
		select a.* from
		sys_user a
		where 1=2
		<if test="(name != null and name != '') or (no != null and no != '')">
			or ( a.user_type='1' and a.del_flag='0'
			<if test="name != null and name != '' ">
				and a.name=#{name}
			</if>
			<if test="no != null and no != '' ">
				and a.no=#{no}
			</if>
			)
		</if>
	</select>
	<select id="getTeaByCdn" resultType="User">
		select a.* from
		sys_user a
		where 1=2
		<if test="(name != null and name != '') or (no != null and no != '')">
			or ( a.user_type='2' and a.del_flag='0'
			<if test="name != null and name != '' ">
				and a.name=#{name}
			</if>
			<if test="no != null and no != '' ">
				and a.no=#{no}
			</if>
			)
		</if>
	</select>
</mapper>