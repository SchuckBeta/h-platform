<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oseasy.initiate.modules.sys.dao.BackTeacherExpansionDao">
    
	<sql id="backTeacherExpansionColumns">
		a.id AS "id",
		a.user_id AS "user.id",
		a.arrangement AS "arrangement",
		a.discipline AS "discipline",
		a.industry AS "industry",
		a.technical_title AS "technicalTitle",
		a.service_intention AS "serviceIntention",
		a.work_unit AS "workUnit",
		a.address AS "address",
		a.resume AS "resume",
		a.recommended_units AS "recommendedUnits",
		a.result AS "result",
		a.award AS "award",
		a.level AS "level",
		a.review_name AS "reviewName",
		a.join_review_time AS "joinReviewTime",
		a.first_bank AS "firstBank",
		a.bank_account AS "bankAccount",
		a.mainExp AS "mainExp",
		a.post_title AS "postTitle",
		a.update_date AS "updateDate",
		a.update_by AS "updateBy.id",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.del_flag AS "delFlag",
		a.teachertype AS "teachertype",
		a.education_type AS "educationType",
		a.is_open AS "isOpen",
		a.first_show AS "firstShow",
		a.site_show AS "siteShow",
		u.name AS "user.name",
		u.company_id AS "user.company.id",
		u.office_id AS "user.office.id",
		u.login_name AS "user.loginName",
		u.password AS "user.password",
		u.no AS "user.no",
		u.email AS "user.email",
		u.phone AS "user.phone",
		u.mobile AS "user.mobile",
		u.user_type AS "user.userType",
		u.login_ip AS "user.loginIp",
		u.photo AS "user.photo",
		u.login_date AS "user.loginDate",
		u.login_flag AS "user.loginFlag",
		u.create_by AS "user.createBy",
		u.create_date AS "user.createDate",
		u.update_by AS "user.updateBy",
		u.update_date AS "user.updateDate",
		u.del_flag AS "user.delFlag",
		u.national AS "user.national",
		u.political AS "user.political",
		u.professional AS "user.professional",
		u.id_type AS "user.idType",
		u.birthday AS "user.birthday",
		u.sex AS "user.sex",
		u.country AS "user.country",
		u.area AS "user.area",
		u.domain AS "user.domain",
		u.degree AS "user.degree",
		u.education AS "user.education",
		u.id_no AS "user.idNumber",
		u.post_code AS "user.postCode",
		so.name AS "user.office.name"<!-- ,
		tur.team_id AS "team.id",
	    tur.id AS "teamUserRelation.id",
		tur.user_type AS "teamUserRelation.userType",
		tur.user_id AS "teamUserRelation.user.id",
		tur.team_id AS "teamUserRelation.teamId",
		tur.create_date AS "teamUserRelation.createDate",
		tur.create_by AS "teamUserRelation.createBy",
		tur.del_flag AS "teamUserRelation.delFlag",
		tur.state AS "teamUserRelation.state",
		tm.project_name AS "team.projectName" -->
		
	</sql>
	
	<sql id="backTeacherExpansionJoins">
		LEFT JOIN sys_user u ON u.id = a.user_id
	</sql>

	<sql id="nowProjectColumn">
		(select 	count(userId) from 	 (select  p1.id,p1.name,p1.team_id,p1.status,r1.user_id as userId from project_declare p1
		left join team t1 on p1.team_id=t1.id and t1.state='1'
		left join team_user_relation r1 on r1.team_id=t1.id
		where p1.status in (1,2,3,4,5,6,7) and p1.del_flag='0' ) user_view where userId=a.user_id
		)
	</sql>

	<sql id="topPriseColumn" >
		( SELECT s.label FROM sys_dict s WHERE
		s.type='competition_college_prise'
		AND s.value=
		(SELECT MAX(g.award) FROM g_contest_award g
		WHERE g.del_flag=0 AND g.contest_id IN (
		SELECT DISTINCT(e.id)
		FROM g_contest e
		WHERE e.del_flag=0 AND e.declare_id IN(
		SELECT t.sponsor FROM team t WHERE t.del_flag=0 AND t.id IN(
		SELECT tur.team_id FROM team_user_relation tur WHERE tur.user_id=a.user_id )
		)
		)
		)
		) AS  "topPrise"
	</sql>


	<sql id="domainsColumn">
		(SELECT GROUP_CONCAT(v.label) FROM
		(SELECT u2.id,d.label FROM sys_user u2 LEFT JOIN sys_dict d ON  FIND_IN_SET(d.value,u2.domain) AND d.TYPE = "technology_field"   ORDER BY u2.id) v  where v.id=u.id GROUP BY v.id
		)
	</sql>


	<sql id="technicalTitle">
		(SELECT dict.label FROM sys_dict dict WHERE dict.type="postTitle_type"  AND dict.value=a.technical_title  )
	</sql>
    
	<select id="get" resultType="BackTeacherExpansion">
		SELECT 
			<include refid="backTeacherExpansionColumns"/>
		FROM sys_teacher_expansion a
		LEFT JOIN sys_user u ON u.id = a.user_id
		LEFT JOIN sys_office so ON so.id = u.office_id
		<!-- LEFT JOIN team_user_relation tur ON tur.user_id = u.id
		LEFT JOIN team tm ON tm.id = tur.team_id -->
		WHERE a.id = #{id}
	</select>
	
	
	<select id="findTeacherIdByUserId" resultType="java.lang.String">
		SELECT 
			a.id
		FROM sys_teacher_expansion a
		WHERE a.user_id = #{userId}
	</select>
	<select id="findTeacherByUserId" resultType="BackTeacherExpansion">
		SELECT 
			a.*
		FROM sys_teacher_expansion a
		WHERE a.user_id = #{userId}
	</select>




	<!-- 列表查询 -->
	<select id="findList" resultType="BackTeacherExpansion">
		SELECT
			<include refid="backTeacherExpansionColumns"/>,
		   <include refid="nowProjectColumn"/> AS "nowProject",
		   <include refid="topPriseColumn"/>
		FROM sys_teacher_expansion a
		LEFT JOIN sys_user u ON u.id = a.user_id
		LEFT JOIN sys_office so ON so.id = u.office_id

		<where>
			a.del_flag = 0

			<!-- 是否有在研项目 -->
			<if test="nowProject !=null and nowProject != ''">
				AND <include refid="nowProjectColumn"/> = #{nowProject}
			</if>

			<!--学院 -->
			<if test="user != null and user.office != null and user.office.id != null and user.office.id != ''">
				AND u.office_id = #{user.office.id}
			</if>

			<!-- 专业 -->
			<if test="user != null and user.professional != null and user.professional != ''">
				AND u.professional = #{user.professional}
			</if>
			<!-- 导师类型 -->
			<if test="teachertype != null and teachertype != ''">
				AND a.teachertype = #{teachertype}
			</if>

			<!--姓名 -->
			<if test="user != null and user.name != null and user.name != ''">
				AND u.name like
				CONCAT('%', #{user.name}, '%')
			</if>

			<!-- 后台 服务意向 -->
			<if test="serviceIntention != null and serviceIntention != ''">
				AND a.serviceIntention = #{serviceIntention}
			</if>


			<!--后台 学历-->
			<if  test="user != null and user.education != null and user.education != ''">
				AND u.education = #{user.education}
			</if>

			<!--后台 学位-->
			<if test="user != null and user.degree != null and user.degree != ''">
				AND u.degree = #{user.degree}
			</if>


			<!--前台关键字 查询范围 姓名 技术领域  职务 职称-->
			<if test="myFind!=null and myFind!=''">
				AND (u.name like '%${myFind}%'
				or  a.post_title like '%${myFind}%'
				or <include refid="technicalTitle"/> like '%${myFind}%'
				OR  (SELECT GROUP_CONCAT(v.label) FROM
				(SELECT u2.id,d.label FROM sys_user u2 LEFT JOIN sys_dict d ON  FIND_IN_SET(d.value,u2.domain) AND d.TYPE = 'technology_field' ) v  where v.id=u.id GROUP BY v.id
				)  like '%${myFind}%'
				)
			</if>

			<!--后台关键字 查询范围 职工号 姓名 职务  职称-->
			<if test="keyWords!=null and keyWords!=''">
				AND ( u.no like '%${keyWords}%'
				  or  u.name like '%${keyWords}%'
				  or  a.post_title like '%${keyWords}%'
				  or <include refid="technicalTitle"/> like '%${keyWords}%'
				)
			</if>

			<if test="currentId != null and currentId != '' ">
				AND u.id  != #{currentId}
			</if>



			<if test="educationType != null and educationType != ''">
				AND a.education_type = #{educationType}
			</if>
			<if test="serviceIntention != null and serviceIntention != ''">
				AND a.service_intention = #{serviceIntention}
			</if>

			<if test="isOpen != null and isOpen != ''">
				AND a.is_open = #{isOpen}
			</if>
			/*是否是首页导师*/
			<if test="firstShow != null and firstShow != ''">
				AND a.first_show = #{firstShow}
			</if>
			/*是否是首页导师*/
			<if test="siteShow != null and siteShow != ''">
				AND a.site_show = #{siteShow}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findTeacherList" resultType="BackTeacherExpansion">
		SELECT
			<include refid="backTeacherExpansionColumns"/>
		FROM sys_teacher_expansion a
		LEFT JOIN sys_user u ON u.id = a.user_id
		LEFT JOIN sys_office so ON so.id = u.office_id

		<where>
			a.del_flag = 0 AND a.site_show = 1
		</where>

		ORDER BY a.update_date DESC

	</select>

	
	<select id="findAllList" resultType="BackTeacherExpansion">
		SELECT 
			<include refid="backTeacherExpansionColumns"/>
		FROM sys_teacher_expansion a
		<include refid="backTeacherExpansionJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	<select id="findTeamById" resultType="Team"  parameterType="java.lang.String">
		SELECT 
			tm.id AS "id",
			tm.name AS "name",
			tm.sponsor AS "sponsor",
			tm.state AS "state",
			tm.project_name AS "projectName",
			tm.project_introduction AS "projectIntroduction",
			tm.create_by AS "createBy.id"
		FROM team sur
		<where>
			sur.del_flag = '0'
				AND sur.user_id  = #{userId}
		</where>		
	</select>
	
	<insert id="insert">
		INSERT INTO sys_teacher_expansion(
			id,
			user_id,
			arrangement,
			discipline,
			industry,
			technical_title,
			service_intention,
			work_unit,
			address,
			resume,
			recommended_units,
			result,
			award,
			level,
			review_name,
			join_review_time,
			first_bank,
			bank_account,
			mainExp,
			post_title,
			update_date,
			update_by,
			create_date,
			create_by,
			del_flag,
			teachertype,
			education_type,
			is_open,
			first_show,
			site_show
		) VALUES (
			#{id},
			#{user.id},
			#{arrangement},
			#{discipline},
			#{industry},
			#{technicalTitle},
			#{serviceIntention},
			#{workUnit},
			#{address},
			#{resume},
			#{recommendedUnits},
			#{result},
			#{award},
			#{level},
			#{reviewName},
			#{joinReviewTime},
			#{firstBank},
			#{bankAccount},
			#{mainExp},
			#{postTitle},
			#{updateDate},
			#{updateBy.id},
			#{createDate},
			#{createBy.id},
			#{delFlag},
			#{teachertype},
			#{educationType},
			#{isOpen},
			#{firstShow},
			#{siteShow}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_teacher_expansion SET 	
			arrangement = #{arrangement},
			discipline = #{discipline},
			industry = #{industry},
			technical_title = #{technicalTitle},
			service_intention = #{serviceIntention},
			work_unit = #{workUnit},
			address = #{address},
			resume = #{resume},
			recommended_units = #{recommendedUnits},
			result = #{result},
			award = #{award},
			level = #{level},
			review_name = #{reviewName},
			join_review_time = #{joinReviewTime},
			first_bank = #{firstBank},
			mainExp = #{mainExp},
			post_title = #{postTitle},
			bank_account = #{bankAccount},
			update_date = #{updateDate},
			update_by = #{updateBy.id},
			create_date = #{createDate},
			create_by = #{createBy.id},
			teachertype = #{teachertype},
			education_type = #{educationType},
			is_open = #{isOpen},
			first_show = #{firstShow},
			site_show = #{siteShow}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sys_teacher_expansion SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 查询获奖信息 -->
	<select id="findTeacherAward" resultType="BackTeacherExpansion" parameterType="java.lang.String">
	    SELECT a.award_level AS "awardLevel",
	    a.create_date AS "awardTime",
	    a.award AS "result"
	    FROM g_contest_award a WHERE a.contest_id
IN (SELECT g.id FROM g_contest g WHERE g.team_id IN (SELECT t.team_id FROM `team_user_relation` t WHERE user_id=#{userId}))
	</select>
</mapper>