<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oseasy.initiate.modules.actyw.dao.ActYwDao">

	<sql id="actYwColumns">
		a.id AS "id",
		a.rel_id AS "relId",
		a.group_id AS "groupId",
		a.flow_id AS "flowId",
		a.is_deploy AS "isDeploy",

		b.id AS "group.id",
		b.name AS "group.name",
		b.status AS "group.status",
		b.type AS "group.type",
		b.keyss AS "group.keyss",
		b.author AS "group.author",
		b.version AS "group.version",
		b.flow_id AS "group.flowId",
		b.sort AS "group.sort",
		b.update_date AS "group.updateDate",
		b.update_by AS "group.updateBy.id",
		b.create_date AS "group.createDate",
		b.create_by AS "group.createBy.id",
		b.remarks AS "group.remarks",
		b.del_flag AS "group.delFlag",

		pd.id AS "projectDeclare.id",
		pd.org_id AS "projectDeclare.orgId",
		pd.plan_content AS "projectDeclare.planContent",
		pd.plan_start_date AS "projectDeclare.planStartDate",
		pd.plan_end_date AS "projectDeclare.planEndDate",
		pd.plan_step AS "projectDeclare.planStep",
		pd.result_type AS "projectDeclare.resultType",
		pd.result_content AS "projectDeclare.resultContent",
		pd.level AS "projectDeclare.level",
		pd.type AS "projectDeclare.type",
		pd.name AS "projectDeclare.name",
		pd.leader AS "projectDeclare.leader",
		pd.number AS "projectDeclare.number",
		pd.introduction AS "projectDeclare.introduction",
		pd.apply_time AS "projectDeclare.applyTime",
		pd.innovation AS "projectDeclare.innovation",
		pd.budget AS "projectDeclare.budget",
		pd.mid_count AS "projectDeclare.midCount",
		pd.mid_result AS "projectDeclare.midResult",
		pd.mid_score AS "projectDeclare.midScore",
		pd.final_score AS "projectDeclare.finalScore",
		pd.reply_score AS "projectDeclare.replyScore",
		pd.final_result AS "projectDeclare.finalResult",
		pd.development AS "projectDeclare.development",
		pd.source AS "projectDeclare.source",
		pd.status AS "projectDeclare.status",
		pd.update_date AS "projectDeclare.updateDate",
		pd.update_by AS "projectDeclare.updateBy.id",
		pd.create_date AS "projectDeclare.createDate",
		pd.create_by AS "projectDeclare.createBy.id",
		pd.del_flag AS "projectDeclare.delFlag",
		pd.proc_ins_id AS "projectDeclare.procInsId",
		pd.team_id AS "projectDeclare.teamId",
		pd.template_id AS "projectDeclare.templateId",

		pp.id AS "proProject.id",
		pp.menu_rid AS "proProject.menuRid",
		pp.category_rid AS "proProject.categoryRid",
		pp.content AS "proProject.content",
		pp.update_date AS "proProject.updateDate",
		pp.update_by AS "proProject.updateBy.id",
		pp.create_date AS "proProject.createDate",
		pp.create_by AS "proProject.createBy.id",
		pp.del_flag AS "proProject.delFlag",
		pp.project_name AS "proProject.projectName",
		pp.project_mark AS "proProject.projectMark",
		pp.state AS "proProject.state",

		m.id AS "proProject.menu.id",
		m.parent_id AS "proProject.menu.parent.id",
		m.parent_ids AS "proProject.menu.parent_ids",
		m.name AS "proProject.menu.name",
		m.img_url AS "proProject.menu.imgUrl",
		m.img_url AS "proProject.imgUrl"
	</sql>

	<sql id="actYwJoins">
		LEFT JOIN act_yw_group b ON b.id = a.group_id
		LEFT JOIN project_declare pd ON pd.id = a.rel_id
		LEFT JOIN pro_project pp ON pp.id = a.rel_id
		LEFT JOIN sys_menu m ON m.id = pp.menu_rid
	</sql>

	<select id="get" resultType="ActYw">
		SELECT
			<include refid="actYwColumns"/>
		FROM act_yw a
		<include refid="actYwJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="ActYw">
		SELECT
			<include refid="actYwColumns"/>
		FROM act_yw a
		<include refid="actYwJoins"/>
		<where>
			<if test="relId != null and relId != ''">
				AND a.rel_id = #{relId}
			</if>
			<if test="groupId != null and groupId != ''">
				AND a.group_id = #{groupId}
			</if>
			<if test="flowId != null and flowId != ''">
				AND a.flow_id = #{flowId}
			</if>
			<if test="isDeploy != null ">
				AND a.is_deploy = #{isDeploy}
			</if>

			<if test="group != null">
				<if test="group.id != null and group.id != ''">
					AND b.id = #{group.id}
				</if>
				<if test="group.name != null and group.name != ''">
					AND b.name LIKE
					<if test="dbName == 'oracle'">'%'||#{group.name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{group.name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{group.name},'%')</if>
				</if>
			</if>

			<if test="projectDeclare != null">
				<if test="projectDeclare.id != null and projectDeclare.id != ''">
					AND pd.id = #{projectDeclare.id}
				</if>
				<if test="projectDeclare.name != null and projectDeclare.name != ''">
					AND pd.name LIKE
					<if test="dbName == 'oracle'">'%'||#{projectDeclare.name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{projectDeclare.name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{projectDeclare.name},'%')</if>
				</if>
			</if>
			<if test="proProject!= null">

				<if test="proProject.projectName != null and proProject.projectName != ''">
					AND pp.project_Name LIKE
					<if test="dbName == 'oracle'">'%'||#{proProject.projectName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{proProject.projectName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{proProject.projectName},'%')</if>
				</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="ActYw">
		SELECT
			<include refid="actYwColumns"/>
		FROM act_yw a
		<include refid="actYwJoins"/>
		<where>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO act_yw(
			id,
			rel_id,
			group_id,
			flow_id,
			is_deploy
		) VALUES (
			#{id},
			#{relId},
			#{groupId},
			#{flowId},
			#{isDeploy}
		)
	</insert>

	<update id="update">
		UPDATE act_yw SET
			rel_id = #{relId},
			group_id = #{groupId},
			flow_id = #{flowId},
			is_deploy = #{isDeploy}
		WHERE id = #{id}
	</update>

	<update id="delete">
		DELETE FROM act_yw
		WHERE id = #{id}
	</update>

</mapper>